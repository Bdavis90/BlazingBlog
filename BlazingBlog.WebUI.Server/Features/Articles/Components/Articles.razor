@page "/"
@attribute [StreamRendering]
@inject ISender Sender

<PageTitle>Articles</PageTitle>
<div class="space-y-6">
    <h2 class="text-3xl font-extrabold text-gray-50">Articles</h2>

    <a href="/article-editor" class="p-3 text-sm font-bold uppercase rounded bg-blue-400 text-gray-900 inline-block">Create New Article</a>

    @if (articles is null)
    {
        <p><em>Loading articles...</em></p>
    }
    else if (!articles.Any())
    {
        <p><em>No articles found.</em></p>
    }
    else
    {
        <ul class="space-y-8 xl:space-y-10">
            @foreach (var article in articles)
            {
                <li>
                    <article>
                        <dl>
                            <dd class="text-xs text-gray-400">
                                <time>@article.DatePublished</time>
                            </dd>
                        </dl>
                        <div class="space-y-1">
                            <h3 class="text-2xl font-bold">
                                <a href="#" class="text-gray-50">@article.Title</a>
                            </h3>
                            <p class="max-w-full text-gray-100 prose prose-invert">@article.Content</p>
                            <div class="flex flex-wrap space-x-3">
                                <a href="/article-editor/@article.Id" class="text-xs text-violet-600">Edit Article</a>
                            </div>
                        </div>
                    </article>
                </li>
            }
        </ul>
    }
</div>

@code {
    private List<ArticleResponse>? articles = new();

    protected override async Task OnInitializedAsync()
    {
        var results = await Sender.Send(new GetArticlesQuery());

        if (results.Success)
        {
            articles = results;
        }
        else
        {
            articles = new();
        }
    }

}
